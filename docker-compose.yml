version: '3'
services:
  manager:
    build: ./manager
    ports:
      - "8081:8081"
    depends_on:
      mongo_primary:
        condition:  service_healthy
      rabbitmq:
        condition:  service_healthy

  worker:
    build: ./worker
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      rabbitmq:
        condition:  service_healthy

  rabbitmq:
    image: rabbitmq:latest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
      RABBITMQ_DEFAULT_VHOST: /
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_running"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo_primary:
    image: mongo:4.4
    command: mongod --bind_ip_all
    ports:
      - "27017:27017"
    restart: always
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "'quit(db.getSiblingDB(\"admin\").runCommand({replSetGetStatus: 1}).myState == 1 ? 0 : 1)'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo_secondary_1:
    image: mongo:4.4
    command: mongod --bind_ip_all && ./rs.sh"
    restart: always
    volumes:
      - ./rs.sh:/rs.sh

  mongo_secondary_2:
    image: mongo:4.4
    command: mongod --bind_ip_all && ./rs.sh"
    restart: always
    volumes:
      - ./rs.sh:/rs.sh